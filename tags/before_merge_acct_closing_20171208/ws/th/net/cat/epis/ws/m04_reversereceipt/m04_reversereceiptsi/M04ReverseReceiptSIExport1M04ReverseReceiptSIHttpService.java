package th.net.cat.epis.ws.m04_reversereceipt.m04_reversereceiptsi;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2017-02-25T23:29:28.677+07:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "M04_ReverseReceiptSIExport1_M04_ReverseReceiptSIHttpService", 
                //  wsdlLocation = "file:/Users/imake/IdeaProjects/CAT_PROJECT/MNPModule/mnpservices/src/main/webapp/wsdl/MNP/M04_ReverseReceipt_M04_ReverseReceiptSIExport1.wsdl",
                  targetNamespace = "http://M04_ReverseReceipt/M04_ReverseReceiptSI") 
public class M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://M04_ReverseReceipt/M04_ReverseReceiptSI", "M04_ReverseReceiptSIExport1_M04_ReverseReceiptSIHttpService");
    public final static QName M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpPort = new QName("http://M04_ReverseReceipt/M04_ReverseReceiptSI", "M04_ReverseReceiptSIExport1_M04_ReverseReceiptSIHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/imake/IdeaProjects/CAT_PROJECT/MNPModule/mnpservices/src/main/webapp/wsdl/MNP/M04_ReverseReceipt_M04_ReverseReceiptSIExport1.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/imake/IdeaProjects/CAT_PROJECT/MNPModule/mnpservices/src/main/webapp/wsdl/MNP/M04_ReverseReceipt_M04_ReverseReceiptSIExport1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns M04ReverseReceiptSI
     */
    @WebEndpoint(name = "M04_ReverseReceiptSIExport1_M04_ReverseReceiptSIHttpPort")
    public M04ReverseReceiptSI getM04ReverseReceiptSIExport1M04ReverseReceiptSIHttpPort() {
        return super.getPort(M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpPort, M04ReverseReceiptSI.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns M04ReverseReceiptSI
     */
    @WebEndpoint(name = "M04_ReverseReceiptSIExport1_M04_ReverseReceiptSIHttpPort")
    public M04ReverseReceiptSI getM04ReverseReceiptSIExport1M04ReverseReceiptSIHttpPort(WebServiceFeature... features) {
        return super.getPort(M04ReverseReceiptSIExport1M04ReverseReceiptSIHttpPort, M04ReverseReceiptSI.class, features);
    }

}
